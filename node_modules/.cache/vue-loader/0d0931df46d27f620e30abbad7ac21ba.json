{"remainingRequest":"C:\\laragon\\www\\filmarket-dev\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\laragon\\www\\filmarket-dev\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\filmarket-dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\filmarket-dev\\src\\views\\setting\\Configuracion.vue?vue&type=template&id=50ab575e&scoped=true&","dependencies":[{"path":"C:\\laragon\\www\\filmarket-dev\\src\\views\\setting\\Configuracion.vue","mtime":1633823606902},{"path":"C:\\laragon\\www\\filmarket-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\filmarket-dev\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\filmarket-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\filmarket-dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}