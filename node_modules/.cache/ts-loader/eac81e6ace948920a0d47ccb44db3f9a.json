{"remainingRequest":"C:\\filmarket\\filmarket_dev\\node_modules\\babel-loader\\lib\\index.js!C:\\filmarket\\filmarket_dev\\node_modules\\ts-loader\\index.js??ref--13-2!C:\\filmarket\\filmarket_dev\\src\\store\\modules\\sessionModule.ts","dependencies":[{"path":"C:\\filmarket\\filmarket_dev\\src\\store\\modules\\sessionModule.ts","mtime":1644931314680},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\filmarket\\filmarket_dev\\src\\store\\modules\\sessionModule.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  getModule,\r\n  Module,\r\n  MutationAction,\r\n  Mutation,\r\n  Action,\r\n  VuexModule,\r\n} from 'vuex-module-decorators';\r\nimport store from '@/store';\r\nimport { UserSubmit } from '../interfaces/Auth';\r\nimport { UserToken } from '../interfaces/UserToken';\r\nimport { http } from '@/utils/http';\r\nimport { User } from '../interfaces/User';\r\nimport { fetchUser,  fetchSubMenu } from '@/utils/utility'\r\nimport { Menu } from '../interfaces/Menu';\r\nimport { SubMenu } from '../interfaces/SubMenu';\r\nimport { deserialize } from 'jsonapi-fractal'\r\nimport storageData from '@/store/services/storageService'\r\n\r\n@Module({\r\n  namespaced: true,\r\n  name: 'session',\r\n  store,\r\n  dynamic: true,\r\n})\r\n\r\nclass sessionModule extends VuexModule {\r\n\r\n\ttoken : string = '';\r\n\trefresh_token: string | null = localStorage.getItem('_refresh_token');\r\n\ttokens: UserToken[] = [];\r\n\tuserSesion: User[] = [];\r\n\tuserMenu: Menu[] = [];\r\n\tuserSubMenu: SubMenu[] = [];\r\n\tsetting : any[] = [];\r\n\r\n\tget getTokens() {\r\n\t\treturn storageData.get('_token');\r\n\t}\r\n\r\n\tget getSetting() {\r\n\t\treturn  storageData.get('_setting');\r\n\t}\r\n\r\n\t@Mutation\r\n\tsetSetting(setting: any) {\r\n\t\tthis.setting = setting;\r\n\t}\r\n\r\n\t@Mutation\r\n\tdestroySetting(){\r\n\t\tthis.setting = [];\r\n\t}\r\n\r\n\t@Mutation\r\n\tdestroyDataSelect(){\r\n\t\tthis.setting = [];\r\n\t} \r\n\r\n\t@Mutation\r\n\tsetTokens(tokens: UserToken[]) {\r\n\t\tthis.tokens = tokens;\r\n\t}\r\n\r\n\t@Mutation\r\n\tsetToken(token: string) {\r\n\t\tthis.token = token;\r\n\t}\r\n\r\n\t@Mutation\r\n\tsetRefresh_token(refresh_token: string) {\r\n\t\tthis.refresh_token = refresh_token;\r\n\t}\r\n\t@Mutation\r\n\tdestroyTokens() {\r\n\t\tthis.tokens = [];\r\n\t}\r\n\t@Mutation\r\n\tdestroyToken() {\r\n\t\tthis.token = '';\r\n\t\tthis.refresh_token = null;\r\n\t}\r\n  \t@Action\r\n\tasync login(userLogin: UserSubmit) {\r\n\t\tawait http.post('login', userLogin)\r\n\t\t.then((payload: any) => {\r\n\t\t\tif (payload) {\r\n\t\t\tconst login = deserialize(payload.data)\r\n\t\t\tuserLogin.code = payload.status\r\n\t\t\t\r\n\t\t\tif (userLogin.code === 200) {\r\n\t\t\t\tconst stoken: string  = login.access_token;\r\n\t\t\t\tconst setting: string = login.configuracion_general\r\n\t\t\t\tstorageData.set('_token', stoken);\r\n\t\t\t\tstorageData.set('_setting', setting);\r\n\t\t\t\tthis.context.commit('setToken', stoken);\r\n\t\t\t\tthis.context.commit('setSetting', setting);\r\n\t\t\t\tthis.context.commit('setTokens', payload.data.data);\r\n\r\n\t\t\t}\r\n\t\t\t} else {\r\n\t\t\tuserLogin.code = 500;\r\n\t\t\tuserLogin.message = 'Error grave con Servidor';\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tuserLogin.code = 500;\r\n\t\t\tuserLogin.message = 'Error 500 grave con Servidor ';\r\n\t\t});\r\n\t\treturn userLogin;\r\n\t}\r\n\r\n  @Action\r\n  async logout() {\r\n    await http\r\n      .post('logout')\r\n      .then((payload: any) => {\r\n        storageData.remove('_token');\r\n        storageData.remove('_setting');\r\n        storageData.remove('_refresh_token');\r\n        storageData.remove('_setting');\r\n        storageData.remove('_dataSelect');\r\n        this.context.commit('destroyToken');\r\n        this.context.commit('destroyTokens');\r\n        this.context.commit('destroySetting');\r\n        this.context.commit('destroyDataSelect');\r\n        return payload;\r\n      })\r\n      .catch((e) => console.log('Error ${e}'));\r\n  }\r\n\r\n  @Action\r\n  async getRefreshToken() {\r\n    const stoken: string = ''\r\n    await http\r\n      .post('refreshtoken',\r\n        {\r\n          'refresh_token': this.refresh_token\r\n        })\r\n      .then((payload: any) => {\r\n        if (payload) {\r\n          if (payload.data.code === 200) {\r\n            const stoken: string = payload.data.data.access_token;\r\n            const srefresh_token: string = payload.data.data.refresh_token;\r\n            storageData.set('_token', stoken);\r\n            storageData.set('_refresh_token', srefresh_token);\r\n            this.context.commit('setToken', stoken);\r\n            this.context.commit('setRefresh_token', srefresh_token);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.data.error);\r\n        return false;\r\n      });\r\n    return true;\r\n  }\r\n\r\n  @MutationAction({ mutate: ['userSesion', 'userMenu', 'userSubMenu'] })\r\n  async loadUser() {\r\n    const user = await fetchUser();\r\n    //const userMenu = await fetchMenu();\r\n    const userSubMenu = await fetchSubMenu(user.role_id);\r\n    const menu: Menu[] =[];\r\n\r\n    ///registro todos ls padres de los submenus\r\n    Object.keys(userSubMenu).map(function(Index){\r\n      let submenu = userSubMenu[Index];\r\n      menu.push(submenu.menu.data);\r\n    });\r\n    \r\n\r\n    //elimino los padres repetidos\r\n    const menuArray = menu.filter((menuItem, index) => {\r\n      const _menu = JSON.stringify(menuItem);\r\n      return index === menu.findIndex(obj => {\r\n        return JSON.stringify(obj) === _menu;\r\n      });\r\n    });\r\n\r\n    const userMenu = menuArray;\r\n    return { userSesion: user, userMenu, userSubMenu };\r\n  }\r\n\r\n\r\n  \r\n}\r\nexport default getModule(sessionModule);\r\n"],"sourceRoot":""}]}