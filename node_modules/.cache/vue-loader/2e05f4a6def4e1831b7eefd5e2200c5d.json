{"remainingRequest":"C:\\filmarket\\filmarket_dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\filmarket\\filmarket_dev\\src\\views\\auth\\Login.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\filmarket\\filmarket_dev\\src\\views\\auth\\Login.vue","mtime":1642885779486},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\filmarket\\filmarket_dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW1wb3J0IHsgVnVlLCBDb21wb25lbnQgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsNCmltcG9ydCBzZXNzaW9uTW9kdWxlIGZyb20gJ0Avc3RvcmUvbW9kdWxlcy9zZXNzaW9uTW9kdWxlJzsNCmltcG9ydCB7IFVzZXJTdWJtaXR9IGZyb20gJ0Avc3RvcmUvaW50ZXJmYWNlcy9BdXRoJzsNCmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnDQppbXBvcnQgeyBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnDQppbXBvcnQge3NlcmlhbGl6ZSwgZGVzZXJpYWxpemUgfSBmcm9tICdqc29uYXBpLWZyYWN0YWwnDQoNCg0KQENvbXBvbmVudA0KZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9naW4gZXh0ZW5kcyBWdWUgew0KICAgIG92ZXJsYXkgPSBmYWxzZTsNCiAgICBlbWFpbCA9ICcnOw0KICAgIHBhc3N3b3JkID0gJyc7DQogICAgbG9naW5FcnJvciA9ICcnOw0KICAgIHRleHQgPSAnRW1haWwgbyBQYXNzd29yZCBJbmNvcnJlY3RvJw0KICAgIGFsZXJ0ID0gZmFsc2UNCiAgICBsb2dpbkZvcm0gOiBhbnkgPSB7DQogICAgICAgIGRldmljZV9uYW1lOiAnaXBob25lJywNCiAgICAgICAgY29kZTogMCwNCiAgICAgICAgbWVzc2FnZTogJycsDQogICAgfQ0KICAgIGRhdGEoKXsNCiAgICAgICAgcmV0dXJuew0KICAgICAgICBzaG93OmZhbHNlLA0KICAgICAgICBjaGVja2JveDE6IHRydWUsDQogICAgICAgIGNoZWNrYm94MjogZmFsc2UsDQogICAgICAgIA0KICAgICAgICBlbWFpbFJ1bGVzOiBbDQogICAgICAgICAgICAodjphbnkpID0+ICEhdiB8fCAnRS1tYWlsIGlzIHJlcXVpcmVkJywNCiAgICAgICAgICAgICh2OmFueSkgPT4gLy4rQC4rXC4uKy8udGVzdCh2KSB8fCAnRS1tYWlsIG11c3QgYmUgdmFsaWQnDQogICAgICAgIF0sDQogICAgICAgIG5hbWVSdWxlczogWw0KICAgICAgICAgICAgKHY6YW55KSA9PiAhIXYgfHwgJ1Bhc3N3b3JkIGlzIHJlcXVpcmVkJywNCiAgICAgICAgICAgICh2OmFueSkgPT4NCiAgICAgICAgICAgICAgICAodiAmJiB2Lmxlbmd0aCA8PSAxMDApIHx8DQogICAgICAgICAgICAgICAgJ05hbWUgbXVzdCBiZSBsZXNzIHRoYW4gMTAwIGNoYXJhY3RlcnMnDQogICAgICAgIF0NCiAgICAgICAgfQ0KICAgIH07DQogICAgZ2V0IExvZ2luUmVxdWVzdCgpOiBhbnkgew0KICAgICAgICByZXR1cm4gc2VyaWFsaXplKHRoaXMubG9naW5Gb3JtLCdsb2dpbicse30pOw0KICAgIH0NCg0KICAgICRyZWZzITogew0KICAgICAgICBsb2dpbkZvcm06IEluc3RhbmNlVHlwZTx0eXBlb2YgVmFsaWRhdGlvbk9ic2VydmVyPjsNCiAgICB9Ow0KIA0KDQogICAgYXN5bmMgbG9naW4oKSB7DQogICAgICAgIHRoaXMub3ZlcmxheSA9IHRydWUNCiAgICAgICAgY29uc3QgdmFsaWQgPSAgdGhpcy4kcmVmcy5sb2dpbkZvcm0udmFsaWRhdGUoKTsNCiAgICAgICAgaWYgKHZhbGlkKSB7IA0KICAgICAgICAgICAgY29uc3QgZGF0YSA6IGFueSA9IGF3YWl0IHNlc3Npb25Nb2R1bGUubG9naW4odGhpcy5Mb2dpblJlcXVlc3QpDQogICAgICAgICAgICBpZiAoZGF0YS5jb2RlID09IDIwMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ0Rhc2hib2FyZCcgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5vdmVybGF5ID0gZmFsc2UNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5hbGVydCA9IHRydWUNCiAgICAgICAgICAgICAgICB0aGlzLmxvZ2luRXJyb3IgPWRhdGEubWVzc2FnZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9IA0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/auth","sourcesContent":["<template>\r\n    <div class=\"page-wrap\">\r\n        <div class=\"session-form-hold\">\r\n  \t    <v-overlay :value=\"overlay\">\r\n        <v-progress-circular\r\n            indeterminate\r\n            size=\"64\"\r\n        ></v-progress-circular>\r\n        </v-overlay>\r\n            <v-card-text class=\"text-center content\">\r\n                <v-avatar size=\"60\" class=\"mb-4\">\r\n                    <img src=\"@/assets/images/avatars/logo.svg\" alt=\"\" />\r\n                </v-avatar>\r\n\r\n                <h6 class=\"text--disabled font-weight-medium mb-10\">\r\n                    Sign in to your account\r\n                </h6>\r\n                <v-form ref=\"loginForm\">\r\n                    <v-text-field\r\n                        label=\"email\"\r\n                        v-model=\"loginForm.email\"\r\n                        :rules=\"emailRules\"\r\n                        required\r\n                    />\r\n\r\n                    <v-text-field\r\n                        :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                        :type=\"show ? 'text' : 'password'\"\r\n                        name=\"input-10-2\"\r\n                        label=\"password\"\r\n                        :counter=\"100\"\r\n                        :rules=\"nameRules\"\r\n                        v-model=\"loginForm.password\"\r\n                        @click:append=\"show = !show\"\r\n                    ></v-text-field>\r\n                    <v-checkbox\r\n                        v-model=\"checkbox1\"\r\n                        label=\"Remember this computer\"\r\n                    ></v-checkbox>\r\n                    <v-btn\r\n                        class=\"mb-4\"\r\n                        @click=\"login\"\r\n                        block\r\n                        color=\"primary\"\r\n                        dark\r\n                    >\r\n                        <v-icon left>mdi-login</v-icon>\r\n                        Iniciar Sesi√≥n</v-btn\r\n                    >\r\n            \r\n                    <div class=\"d-flex justify-around flex-wrap\">\r\n                        <v-btn text small color=\"primary\" class=\"mb-2\"\r\n                            >Forgot Password</v-btn\r\n                        >\r\n                        <v-btn\r\n                            text\r\n                            small\r\n                            color=\"primary\"\r\n                            to=\"/app/sessions/sign-up-2\"\r\n                            >Create New Account</v-btn\r\n                        >\r\n                    </div>\r\n                </v-form>  \r\n                <v-alert type=\"error\" v-model=\"alert\" dismissible>\r\n                {{ text }}\r\n                </v-alert> \r\n            </v-card-text>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { Vue, Component } from 'vue-property-decorator';\r\nimport sessionModule from '@/store/modules/sessionModule';\r\nimport { UserSubmit} from '@/store/interfaces/Auth';\r\nimport { required } from 'vee-validate/dist/rules'\r\nimport { ValidationObserver } from 'vee-validate'\r\nimport {serialize, deserialize } from 'jsonapi-fractal'\r\n\r\n\r\n@Component\r\nexport default class Login extends Vue {\r\n    overlay = false;\r\n    email = '';\r\n    password = '';\r\n    loginError = '';\r\n    text = 'Email o Password Incorrecto'\r\n    alert = false\r\n    loginForm : any = {\r\n        device_name: 'iphone',\r\n        code: 0,\r\n        message: '',\r\n    }\r\n    data(){\r\n        return{\r\n        show:false,\r\n        checkbox1: true,\r\n        checkbox2: false,\r\n        \r\n        emailRules: [\r\n            (v:any) => !!v || 'E-mail is required',\r\n            (v:any) => /.+@.+\\..+/.test(v) || 'E-mail must be valid'\r\n        ],\r\n        nameRules: [\r\n            (v:any) => !!v || 'Password is required',\r\n            (v:any) =>\r\n                (v && v.length <= 100) ||\r\n                'Name must be less than 100 characters'\r\n        ]\r\n        }\r\n    };\r\n    get LoginRequest(): any {\r\n        return serialize(this.loginForm,'login',{});\r\n    }\r\n\r\n    $refs!: {\r\n        loginForm: InstanceType<typeof ValidationObserver>;\r\n    };\r\n \r\n\r\n    async login() {\r\n        this.overlay = true\r\n        const valid =  this.$refs.loginForm.validate();\r\n        if (valid) { \r\n            const data : any = await sessionModule.login(this.LoginRequest)\r\n            if (data.code == 200) {\r\n                this.$router.push({ name: 'Dashboard' });\r\n                this.overlay = false\r\n            } else {\r\n                this.alert = true\r\n                this.loginError =data.message\r\n            }\r\n        } \r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.page-wrap {\r\n    background-color: #242939 !important;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 40px 1rem;\r\n    height: 100%;\r\n    min-height: 100vh;\r\n}\r\n.session-form-hold {\r\n    width: 100%;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n}\r\n.content{\r\n      background-color: white;\r\n      border-radius: 10px;\r\n}\r\n</style>\r\n"]}]}